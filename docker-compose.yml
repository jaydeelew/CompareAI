services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: compareintel
      POSTGRES_USER: compareintel
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - compareai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U compareintel"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        ENVIRONMENT: development  # or production
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=development  # Enable dev features like rate limit reset
    env_file:
      - ./backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - compareai-network

  frontend:
    build: 
      context: ./frontend
      target: dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=/api
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    depends_on:
      - backend
    networks:
      - compareai-network

  nginx:
    image: nginx:1.25
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /dev/null:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - compareai-network

networks:
  compareai-network:
    driver: bridge
